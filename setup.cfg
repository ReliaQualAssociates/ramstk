[bumpversion]
current_version = 1.0.0.alpha
parse = (?P<major>\d+)\.(?P<minor>\d+)\.(?P<patch>\d+)\.(?P<release>.*)
commit = False
tag = False
serialize =
	{major}.{minor}.{patch}.{release}
	{major}.{minor}.{patch}

[metadata]
name = ramstk
long_description = file: README.md
long_description_content_type = text/markdown
license = BSD-3-Clause
license_file = LICENSE
classifiers =
	License :: OSI Approved :: BSD License

[bumpversion:file:VERSION]

[bumpversion:part:release]
values =
	alpha
	beta
	rc1
	rc2

[compile_catalog]
domain = ramstk
directory = locale

[coverage:run]
branch = True
cover_pylib = False
omit =
	*/.local/*
	*/.virtualenv/*
	*/gui/*
	*/__gui/*
	*/_assistants_/*
	*/_reports_/*
	*/tests/*
	*/views/*
	__init__.py
	conf.py
	setup.py

[coverage:report]
omit =
	*/.local/*
	*/.virtualenvs/*
	*/gui/*
	*/__gui/*
	*/_assistants_/*
	*/_reports_/*
	*/tests/*
	__init__.py
	conf.py
	setup.py
exclude_lines =
	pragma: no cover
	import
	if self._test
	if __name__ == __main__:
show_missing = True

[coverage:html]
directory = .reports/coverage/html
title = "RAMSTK Test Coverage Report"

[coverage:xml]
output = cobertura.xml

[extract_messages]
input_dirs = src/ramstk/
output_file = locale/rtk.pot

[isort]
balanced_wrapping = True
known_first_party = ramstk
known_third_party = dateutil,defusedxml,gi,lifelines,matplotlib,numpy,openpyxl,pandas,psycopg2,pubsub,pytest,scipy,setuptools,sortedcontainers,sql,sqlalchemy,sympy,toml,treelib,xlwt,ISOLATION_LEVEL_AUTOCOMMIT
import_heading_firstparty = RAMSTK Package Imports
import_heading_localfolder = RAMSTK Local Imports
import_heading_stdlib = Standard Library Imports
import_heading_thirdparty = Third Party Imports
use_parentheses = True
multi_line_output = 5

[mypy]
allow_subclassing_any = True
follow_imports = skip
implicit_reexport = True

[mypy-tests.*]
ignore_missing_imports = True
ignore_errors = True

[mypy-matplotlib.*]
ignore_missing_imports = True

[mypy-numpy.*]
ignore_missing_imports = True

[mypy-openpyxl.*]
ignore_missing_imports = True

[mypy-pandas.*]
ignore_missing_imports = True

[mypy-pubsub.*]
ignore_missing_imports = True

[mypy-sortedcontainers.*]
ignore_missing_imports = True

[mypy-scipy.*]
ignore_missing_imports = True

[mypy-sympy.*]
ignore_missing_imports = True

[mypy-treelib.*]
ignore_missing_imports = True

[pycodestyle]
count = True
exclude =
	.git,
	.tox,
	*.pyc,
	*.pyo,
	build,
	dist,
	*.egg-info
	config,
	docs,
	locale,
	tests,
	tools
format = pylint
ignore =
	E121,
	E123,
	E126,
	E133,
	E242,
	E265,
	W503,
	W504
max-line-length = 80
statistics = True

[pydocstyle]
ignore =
	D203,
	D204,
	D213
match = 'src/ramstk/*.py'

[pylint]
profile = no
ignore =
	test_exports.py,
	test_failure_definition.py,
	test_fmea.py,
	test_function.py,
	test_imports.py,
	test_hazards.py,
	test_revision.py,
	test_stakeholder.py,
	test_usage_profile.py,
	test_validation.py
persistent = yes
extension-pkg-whitelist = pango
disable =
	invalid-name,
	line-too-long,
	too-many-instance-attributes,
	too-few-public-methods,
	relative-import,
	fixme,
	anomalous-unicode-escape-in-string,
	import-error,
	no-member
output-format = text
files-output = no
reports = yes
evaluation = 10.0 - ((float(5 * error + warning + refactor + convention) / statement) * 10)
comment = no
good-names = _
max-args = 6
max-line-length = 80
max-module-lines = 5000
indent-string = '    '
notes =
	FIXME,
	XXX,
	TODO
min-similarity-lines = 18
ignore-comments = yes
ignore-docstrings = yes
ignore-imports = yes
ignore-mixin-members = yes
ignored-classes = SQLObject
init-import = no

[tool:pytest]
addopts =
	--ignore=build
	--ignore=data
	--ignore=dist
	--ignore=docs
	--ignore=locale
	--ignore=RAMSTK.egg-info
	--ignore=tests
	--ignore=setup.py
	--ignore=data.py
	--ignore=__init__.py
	--cov-config=setup.cfg
	--cov=ramstk
	--cov-branch
	--cov-append
	--cov-report=xml
	--cov-report=term
norecursedirs =
	.git
	.pytest_cache
	.tox
	build
	data
	dist
	docs
	locale
	RAMSTK.egg-info tests
testpaths = tests
markers =
	unit: mark the test as a unit test.
	integration: mark the test as an integration test.
	calculation: mark the test as test of a calculation method/function.
	gui: mark the tests as test of a GUI component.

[semantic_release]
version_variable = VERSION:__version__

[yapf]
based_on_style = pep8
split_before_arithmetic_operator = true
split_penalty_arithmetic_operator = 300
split_before_logical_operator = true
split_penalty_import_names = 300
