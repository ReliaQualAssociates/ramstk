# Standard Library Imports
from typing import Any, Dict, List, Tuple

# RAMSTK Package Imports
from ramstk.configuration import (
    RAMSTK_ACTIVE_ENVIRONMENTS as RAMSTK_ACTIVE_ENVIRONMENTS
)
from ramstk.configuration import (
    RAMSTK_DORMANT_ENVIRONMENTS as RAMSTK_DORMANT_ENVIRONMENTS
)
from ramstk.configuration import (
    RAMSTK_HR_DISTRIBUTIONS as RAMSTK_HR_DISTRIBUTIONS
)
from ramstk.configuration import RAMSTK_HR_MODELS as RAMSTK_HR_MODELS
from ramstk.configuration import RAMSTK_HR_TYPES as RAMSTK_HR_TYPES
from ramstk.configuration import (
    RAMSTKUserConfiguration as RAMSTKUserConfiguration
)
from ramstk.logger import RAMSTKLogManager as RAMSTKLogManager
from ramstk.views.gtk3 import Gtk as Gtk
from ramstk.views.gtk3 import _ as _
from ramstk.views.gtk3.widgets import RAMSTKCheckButton as RAMSTKCheckButton
from ramstk.views.gtk3.widgets import RAMSTKComboBox as RAMSTKComboBox
from ramstk.views.gtk3.widgets import RAMSTKEntry as RAMSTKEntry
from ramstk.views.gtk3.widgets import RAMSTKPanel as RAMSTKPanel
from ramstk.views.gtk3.widgets import (
    RAMSTKScrolledWindow as RAMSTKScrolledWindow
)
from ramstk.views.gtk3.widgets import RAMSTKTextView as RAMSTKTextView
from ramstk.views.gtk3.widgets import RAMSTKWorkView as RAMSTKWorkView

# RAMSTK Local Imports
from . import ATTRIBUTE_KEYS as ATTRIBUTE_KEYS
from .components import capacitor as capacitor
from .components import connection as connection
from .components import inductor as inductor
from .components import integrated_circuit as integrated_circuit
from .components import meter as meter
from .components import miscellaneous as miscellaneous
from .components import relay as relay
from .components import resistor as resistor
from .components import semiconductor as semiconductor
from .components import switch as switch
from .components.panels import RAMSTKStressInputPanel as RAMSTKStressInputPanel
from .components.panels import (
    RAMSTKStressResultPanel as RAMSTKStressResultPanel
)

class GeneralDataPanel(RAMSTKPanel):
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    _title: Any = ...
    dicSubcategories: Any = ...
    chkRepairable: Any = ...
    cmbCategory: Any = ...
    cmbSubcategory: Any = ...
    txtAltPartNum: Any = ...
    txtCompRefDes: Any = ...
    txtDescription: Any = ...
    txtFigureNumber: Any = ...
    txtLCN: Any = ...
    txtName: Any = ...
    txtPageNumber: Any = ...
    txtPartNumber: Any = ...
    txtRefDes: Any = ...
    txtSpecification: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def do_load_categories(self, category: Dict[int, str]) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_load_subcategories(self, category_id: int) -> None:
        ...

    @staticmethod
    def _request_load_component(combo: RAMSTKComboBox) -> None:
        ...

    def _request_load_subcategories(self, combo: RAMSTKComboBox) -> None:
        ...

    def __do_set_callbacks(self) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class LogisticsPanel(RAMSTKPanel):
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    _title: Any = ...
    cmbCostType: Any = ...
    cmbManufacturer: Any = ...
    txtCAGECode: Any = ...
    txtCost: Any = ...
    txtNSN: Any = ...
    txtQuantity: Any = ...
    txtYearMade: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def do_load_cost_types(self) -> None:
        ...

    def do_load_manufacturers(
            self, manufacturers: Dict[int, Tuple[str, str, str]]) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_load_cage_code(self, combo: RAMSTKComboBox) -> None:
        ...

    def __do_set_callbacks(self) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class MiscellaneousPanel(RAMSTKPanel):
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    _title: Any = ...
    chkTagged: Any = ...
    txtAttachments: Any = ...
    txtRemarks: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_set_callbacks(self) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class AssessmentInputPanel(RAMSTKPanel):
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    _title: Any = ...
    cmbFailureDist: Any = ...
    cmbHRMethod: Any = ...
    cmbHRType: Any = ...
    txtAddAdjFactor: Any = ...
    txtFailLocation: Any = ...
    txtFailScale: Any = ...
    txtFailShape: Any = ...
    txtMultAdjFactor: Any = ...
    txtSpecifiedHt: Any = ...
    txtSpecifiedHtVar: Any = ...
    txtSpecifiedMTBF: Any = ...
    txtSpecifiedMTBFVar: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def do_load_hr_distributions(self, distributions: List[str]) -> None:
        ...

    def do_load_hr_methods(self, methods: List[str]) -> None:
        ...

    def do_load_hr_types(self, hr_types: List[str]) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_set_sensitive_assessed(self, type_id: int) -> None:
        ...

    def _do_set_sensitive_specified_ht(self, type_id: int) -> None:
        ...

    def _do_set_sensitive_specified_mtbf(self, type_id: int) -> None:
        ...

    def _do_set_sensitive_specified_distribution(self, type_id: int) -> None:
        ...

    def _do_set_sensitive(self, **kwargs: Any) -> None:
        ...

    def __do_set_callbacks(self) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class EnvironmentalInputPanel(RAMSTKPanel):
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    _title: Any = ...
    cmbActiveEnviron: Any = ...
    cmbDormantEnviron: Any = ...
    scwDesignRatings: Any = ...
    txtActiveTemp: Any = ...
    txtDormantTemp: Any = ...
    txtDutyCycle: Any = ...
    txtMissionTime: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def do_load_environment_active(self, environments: List[str]) -> None:
        ...

    def do_load_environment_dormant(self, environments: List[str]) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_set_callbacks(self) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class ReliabilityResultsPanel(RAMSTKPanel):
    _lst_labels: Any = ...
    _title: Any = ...
    txtActiveHt: Any = ...
    txtActiveHtVar: Any = ...
    txtDormantHt: Any = ...
    txtDormantHtVar: Any = ...
    txtLogisticsHt: Any = ...
    txtLogisticsHtVar: Any = ...
    txtLogisticsMTBF: Any = ...
    txtLogisticsMTBFVar: Any = ...
    txtLogisticsRt: Any = ...
    txtLogisticsRtVar: Any = ...
    txtMissionHt: Any = ...
    txtMissionHtVar: Any = ...
    txtMissionMTBF: Any = ...
    txtMissionMTBFVar: Any = ...
    txtMissionRt: Any = ...
    txtMissionRtVar: Any = ...
    txtPercentHt: Any = ...
    txtSoftwareHt: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class AvailabilityResultsPanel(RAMSTKPanel):
    _lst_labels: Any = ...
    _title: Any = ...
    txtCostFailure: Any = ...
    txtCostHour: Any = ...
    txtLogisticsAt: Any = ...
    txtLogisticsAtVar: Any = ...
    txtMCMT: Any = ...
    txtMissionAt: Any = ...
    txtMissionAtVar: Any = ...
    txtMMT: Any = ...
    txtMPMT: Any = ...
    txtMTTR: Any = ...
    txtPartCount: Any = ...
    txtTotalCost: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def _do_clear_panel(self) -> None:
        ...

    _record_id: Any = ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_set_properties(self) -> None:
        ...


class GeneralData(RAMSTKWorkView):
    _module: str = ...
    _tablabel: str = ...
    _tabtooltip: str = ...
    _pnlGeneralData: Any = ...
    _pnlLogistics: Any = ...
    _pnlMiscellaneous: Any = ...
    _lst_callbacks: Any = ...
    _lst_icons: Any = ...
    _lst_mnu_labels: Any = ...
    _lst_tooltips: Any = ...

    def __init__(self, configuration: RAMSTKUserConfiguration,
                 logger: RAMSTKLogManager) -> None:
        ...

    def _do_request_make_comp_ref_des(self, __button: Gtk.ToolButton) -> None:
        ...

    _record_id: Any = ...
    _parent_id: Any = ...

    def _do_set_record_id(self, attributes: Dict[str, Any]) -> None:
        ...

    def __make_ui(self) -> None:
        ...


class AssessmentInputs(RAMSTKWorkView):
    _lst_title: List[str] = ...
    _module: str = ...
    _tablabel: str = ...
    _tabtooltip: str = ...
    _dic_component_panels: Any = ...
    _lst_callbacks: Any = ...
    _lst_icons: Any = ...
    _lst_tooltips: Any = ...
    _pnlAssessmentInput: Any = ...
    _pnlEnvironmentalInput: Any = ...
    _pnlStressInput: Any = ...
    _vpnLeft: Any = ...
    _vpnRight: Any = ...
    _hazard_rate_method_id: int = ...
    _subcategory_id: int = ...

    def __init__(self, configuration: RAMSTKUserConfiguration,
                 logger: RAMSTKLogManager) -> None:
        ...

    def _do_pack_component_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_request_calculate(self, __button: Gtk.ToolButton) -> None:
        ...

    _record_id: Any = ...
    _parent_id: Any = ...

    def _do_set_record_id(self, attributes: Dict[str, Any]) -> None:
        ...

    def __make_ui(self) -> None:
        ...


class AssessmentResults(RAMSTKWorkView):
    _lst_title: Any = ...
    _module: str = ...
    _tablabel: str = ...
    _tabtooltip: str = ...
    _dic_component_results: Any = ...
    _lst_callbacks: Any = ...
    _lst_icons: Any = ...
    _lst_tooltips: Any = ...
    _hazard_rate_method_id: int = ...
    _subcategory_id: int = ...
    _pnlAvailabilityResults: Any = ...
    _pnlReliabilityResults: Any = ...
    _pnlStressResults: Any = ...
    _vpnLeft: Any = ...
    _vpnRight: Any = ...

    def __init__(self, configuration: RAMSTKUserConfiguration,
                 logger: RAMSTKLogManager) -> None:
        ...

    def _do_pack_component_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_request_calculate(self, __button: Gtk.ToolButton) -> None:
        ...

    _record_id: Any = ...
    _parent_id: Any = ...

    def _do_set_record_id(self, attributes: Dict[str, Any]) -> None:
        ...

    def __make_ui(self) -> None:
        ...
