# Standard Library Imports
from typing import Any, Dict, List

# RAMSTK Package Imports
from ramstk.views.gtk3 import _ as _
from ramstk.views.gtk3.widgets import RAMSTKComboBox as RAMSTKComboBox
from ramstk.views.gtk3.widgets import RAMSTKEntry as RAMSTKEntry

# RAMSTK Local Imports
from .panels import RAMSTKAssessmentInputPanel as RAMSTKAssessmentInputPanel
from .panels import RAMSTKAssessmentResultPanel as RAMSTKAssessmentResultPanel

class AssessmentInputPanel(RAMSTKAssessmentInputPanel):
    _dic_technology: Dict[int, List[Any]] = ...
    _dic_types: Dict[int, List[Any]] = ...
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    cmbApplication: Any = ...
    cmbConstruction: Any = ...
    cmbECC: Any = ...
    cmbManufacturing: Any = ...
    cmbPackage: Any = ...
    cmbTechnology: Any = ...
    cmbType: Any = ...
    txtArea: Any = ...
    txtFeatureSize: Any = ...
    txtNActivePins: Any = ...
    txtNCycles: Any = ...
    txtNElements: Any = ...
    txtOperatingLife: Any = ...
    txtThetaJC: Any = ...
    txtVoltageESD: Any = ...
    txtYearsInProduction: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...
    _lst_tooltips: Any = ...

    def __init__(self) -> None:
        ...

    def do_load_comboboxes(self, subcategory_id: int) -> None:
        ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_set_sensitive(self) -> None:
        ...

    def _do_load_application_combo(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_dram(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_eeprom(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_gaas(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_linear(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_logic(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_microprocessor_microcontroller(
            self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_pal_pla(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_rom(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_sram(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_load_vhsic_vlsi(self, attributes: Dict[str, Any]) -> None:
        ...

    def __do_set_dram_sensitive(self) -> None:
        ...

    def __do_set_eeprom_sensitive(self) -> None:
        ...

    def __do_set_gaas_sensitive(self) -> None:
        ...

    def __do_set_linear_sensitive(self) -> None:
        ...

    def __do_set_logic_sensitive(self) -> None:
        ...

    def __do_set_microprocessor_microcontroller_sensitive(self) -> None:
        ...

    def __do_set_pal_pla_sensitive(self) -> None:
        ...

    def __do_set_rom_sensitive(self) -> None:
        ...

    def __do_set_sram_sensitive(self) -> None:
        ...

    def __do_set_vhsic_vlsi_sensitive(self) -> None:
        ...

    def __set_callbacks(self) -> None:
        ...

    def __set_properties(self) -> None:
        ...


class AssessmentResultPanel(RAMSTKAssessmentResultPanel):
    _dic_part_stress: Dict[int, str] = ...
    _lst_labels: Any = ...
    _lst_tooltips: Any = ...
    txtC1: Any = ...
    txtC2: Any = ...
    txtLambdaBD: Any = ...
    txtLambdaBP: Any = ...
    txtLambdaCYC: Any = ...
    txtLambdaEOS: Any = ...
    txtPiA: Any = ...
    txtPiCD: Any = ...
    txtPiL: Any = ...
    txtPiMFG: Any = ...
    txtPiPT: Any = ...
    txtPiT: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_set_sensitive(self) -> None:
        ...

    def __do_set_part_stress_sensitive(self) -> None:
        ...
