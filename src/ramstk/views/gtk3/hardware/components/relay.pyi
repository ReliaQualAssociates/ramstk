# Standard Library Imports
from typing import Any, Dict

# RAMSTK Package Imports
from ramstk.views.gtk3 import _ as _
from ramstk.views.gtk3.widgets import RAMSTKComboBox as RAMSTKComboBox
from ramstk.views.gtk3.widgets import RAMSTKEntry as RAMSTKEntry

# RAMSTK Local Imports
from .panels import RAMSTKAssessmentInputPanel as RAMSTKAssessmentInputPanel
from .panels import RAMSTKAssessmentResultPanel as RAMSTKAssessmentResultPanel

class AssessmentInputPanel(RAMSTKAssessmentInputPanel):
    _dic_quality: Any = ...
    _dic_pc_types: Any = ...
    _dic_types: Any = ...
    _dic_application: Any = ...
    _dic_construction: Any = ...
    _lst_technology: Any = ...
    _lst_contact_form: Any = ...
    _lst_contact_rating: Any = ...
    _dic_attribute_keys: Any = ...
    _lst_labels: Any = ...
    _lst_tooltips: Any = ...
    cmbApplication: Any = ...
    cmbConstruction: Any = ...
    cmbContactForm: Any = ...
    cmbContactRating: Any = ...
    cmbLoadType: Any = ...
    cmbType: Any = ...
    txtCycles: Any = ...
    _dic_attribute_updater: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def do_load_comboboxes(self, subcategory_id: int) -> None:
        ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_set_sensitive(self) -> None:
        ...

    def __do_load_application_combo(self) -> None:
        ...

    def __do_load_construction_combo(self) -> None:
        ...

    def __do_load_quality_combo(self) -> None:
        ...

    def __do_load_type_combo(self) -> None:
        ...

    def __set_callbacks(self) -> None:
        ...

    def __set_properties(self) -> None:
        ...

    def _on_combo_changed(self, __combo: RAMSTKComboBox, index: int) -> None:
        ...


class AssessmentResultPanel(RAMSTKAssessmentResultPanel):
    _dic_part_stress: Any = ...
    _lst_labels: Any = ...
    _lst_tooltips: Any = ...
    txtPiC: Any = ...
    txtPiCYC: Any = ...
    txtPiF: Any = ...
    txtPiL: Any = ...
    _lst_widgets: Any = ...

    def __init__(self) -> None:
        ...

    def _do_load_panel(self, attributes: Dict[str, Any]) -> None:
        ...

    def _do_set_sensitive(self) -> None:
        ...
