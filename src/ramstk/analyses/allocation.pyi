# Standard Library Imports
from typing import Any, Dict

def _calculate_agree_apportionment(
    parent_goal: float, attributes: Dict[str, Any]
) -> Dict[str, Any]: ...
def _calculate_arinc_apportionment(
    parent_goal: float, attributes: Dict[str, Any]
) -> Dict[str, Any]: ...
def _calculate_equal_apportionment(
    parent_goal: float, attributes: Dict[str, Any]
) -> Dict[str, Any]: ...
def _calculate_foo_apportionment(
    parent_goal: float, cum_weight: int, attributes: Dict[str, Any]
) -> Dict[str, Any]: ...
def _from_hazard_rate_goal(attributes: Dict[str, Any]) -> Dict[str, Any]: ...
def _from_mtbf_goal(attributes: Dict[str, Any]) -> Dict[str, Any]: ...
def _from_reliability_goal(attributes: Dict[str, Any]) -> Dict[str, Any]: ...
def do_allocate_reliability(
    parent_goal: float, cumulative_weight: int, **attributes: Dict[str, Any]
) -> Dict[str, Any]: ...
def do_calculate_goals(**attributes: Dict[str, Any]) -> Dict[str, Any]: ...
def get_allocation_goal(**attributes: Dict[str, Any]) -> Dict[str, Any]: ...
