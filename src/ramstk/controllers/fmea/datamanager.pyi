# Standard Library Imports
from typing import Any, Dict

# Third Party Imports
from treelib import Tree

# RAMSTK Package Imports
from ramstk.controllers import RAMSTKDataManager as RAMSTKDataManager

class DataManager(RAMSTKDataManager):
    _tag: str = ...
    _root: int = ...
    _mode_tree: Any = ...
    _mechanism_tree: Any = ...
    _cause_tree: Any = ...
    _control_tree: Any = ...
    _action_tree: Any = ...
    def __init__(self, **kwargs: Dict[str, Any]) -> None: ...
    def do_set_mode_tree(self, tree: Tree) -> None: ...
    def do_set_mechanism_tree(self, tree: Tree) -> None: ...
    def do_set_cause_tree(self, tree: Tree) -> None: ...
    def do_set_control_tree(self, tree: Tree) -> None: ...
    def do_set_action_tree(self, tree: Tree) -> None: ...
    def on_select_all(self) -> None: ...
    def _do_load_modes(self) -> None: ...
    def _do_load_mechanisms(self, mode_id: int) -> None: ...
    def _do_load_causes(self, mechanism_id: int, parent_id: str) -> None: ...
    def _do_load_controls(self, cause_id: int, parent_id: str) -> None: ...
    def _do_load_actions(self, cause_id: int, parent_id: str) -> None: ...
    def _on_insert(self, tree: Tree, node_id: int) -> None: ...
