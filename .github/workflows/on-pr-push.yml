name: PR Push Workflow

on:
  pull_request:
    branches:
      - master

jobs:
  bandit:
    name: Check for Security Vulnerabilities
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Run bandit against repository
        uses: jpetrucciani/bandit-check@master
        with:
          path: 'src/ramstk'

  format-check:
    name: Check Code Formatting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check code format with black, isort, and docformatter
        uses: weibullguy/python-lint-plus@master
        with:
          python-root-list: "src/ramstk"
          use-black: true
          use-yapf: false
          use-isort: true
          use-docformatter: true
          use-pycodestyle: false
          use-pydocstyle: false
          use-mypy: false
          use-pylint: false
          use-flake8: false
          use-mccabe: false
          use-radon: false
          use-rstcheck: false
          use-check-manifest: false
          use-pyroma: false
          extra-black-options: ""
          extra-yapf-options: ""
          extra-isort-options: "--settings-file ./pyproject.toml"
          extra-docformatter-options: ""
          extra-pycodestyle-options: ""
          extra-pydocstyle-options: ""
          extra-mypy-options: ""
          extra-pylint-options: ""
          extra-flake8-options: ""

  style-check:
    name: Check Code Styling
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check code style with pycodestyle and pydocstyle
        uses: weibullguy/python-lint-plus@master
        with:
          python-root-list: "src/ramstk"
          use-black: false
          use-yapf: false
          use-isort: false
          use-docformatter: false
          use-pycodestyle: true
          use-pydocstyle: true
          use-mypy: false
          use-pylint: false
          use-flake8: false
          use-mccabe: false
          use-radon: false
          use-rstcheck: false
          use-check-manifest: false
          use-pyroma: false
          extra-black-options: ""
          extra-yapf-options: ""
          extra-isort-options: ""
          extra-docformatter-options: ""
          extra-pycodestyle-options: "--config=./setup.cfg --count"
          extra-pydocstyle-options: "--count"
          extra-mypy-options: ""
          extra-pylint-options: ""

  type-check:
    name: Check Code Type Hinting
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Check code type hinting with mypy
        uses: weibullguy/python-lint-plus@master
        with:
          python-root-list: "src/ramstk"
          use-black: false
          use-yapf: false
          use-isort: false
          use-docformatter: false
          use-pycodestyle: false
          use-pydocstyle: false
          use-mypy: true
          use-pylint: false
          use-flake8: false
          use-mccabe: false
          use-radon: false
          use-rstcheck: false
          use-check-manifest: false
          use-pyroma: false
          extra-black-options: ""
          extra-yapf-options: ""
          extra-isort-options: ""
          extra-docformatter-options: ""
          extra-pycodestyle-options: ""
          extra-pydocstyle-options: ""
          extra-mypy-options: "--config-file ./setup.cfg"
          extra-pylint-options: ""
          extra-flake8-options: ""

  lint-check:
    name: Check Code Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Lint code with pylint
        uses: weibullguy/python-lint-plus@master
        with:
          python-root-list: "src/ramstk"
          use-black: false
          use-yapf: false
          use-isort: false
          use-docformatter: false
          use-pycodestyle: false
          use-pydocstyle: false
          use-mypy: false
          use-pylint: true
          use-flake8: false
          use-mccabe: false
          use-radon: false
          use-rstcheck: false
          use-check-manifest: false
          use-pyroma: false
          extra-black-options: ""
          extra-yapf-options: ""
          extra-isort-options: ""
          extra-docformatter-options: ""
          extra-pycodestyle-options: ""
          extra-pydocstyle-options: ""
          extra-mypy-options: ""
          extra-pylint-options: "-j0 --rcfile=./pyproject.toml --dummy-variables-rgx='__'"
          extra-flake8-options: ""

  test_suite:
    name: RAMSTK Test Suite
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python: [3.6, 3.7, 3.8]

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        ports:
          - 5432:5432

    steps:
      - uses: actions/checkout@v2

      - name: Update and install system packages
        run: |
          echo "VIRTUAL_ENV=ramstk-venv${{ matrix.python }}" >> $GITHUB_ENV
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends apt-utils git libgirepository1.0-dev gir1.2-gtk-3.0 python3-gi python3-gi-cairo python3-pytest libenchant1c2a libenchant-dev python3-numpy python3-scipy xauth xvfb

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python }}

      - name: Create a virtual environment
        run: |
          python -mvenv $VIRTUAL_ENV

      - name: Install RAMSTK dependencies and test with coverage
        run: |
          source $VIRTUAL_ENV/bin/activate
          pip install -U pip setuptools>12.0 urllib3 poetry
          make depends
          make PREFIX=$VIRTUAL_ENV install
          xvfb-run --auto-servernum make coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v1
        with:
          files: ./cobertura.xml
          flags: ${{ matrix.python }}

      - name: Create Coveralls report
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel: true

  upload_coveralls:
    name: Upload Coverage Results to Coveralls
    needs: test_suite
    runs-on: ubuntu-latest
    steps:
      - name: Upload report to Coveralls
        uses: AndreMiras/coveralls-python-action@develop
        with:
          parallel-finished: true
