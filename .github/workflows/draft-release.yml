name: Draft Release

on:
  push:
    branches:
      - master

jobs:
  draft_release:
    name: Draft or Update Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Get PR labels
        id: check_pr_labels
        uses: joerick/pr-labels-action@v1.0.6

      - name: Get previous tag
        id: previoustag
        uses: WyriHaximus/github-action-get-previous-tag@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next semantic version
        id: nexttag
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Check for new minor version
        if: contains(steps.check_pr_labels.outputs.labels, ' minor ')
        run: |
          echo "RAMSTK_NEXT_VER=${{ steps.nexttag.outputs.minor }}" >> $GITHUB_ENV"
          echo "do_bump=1" >> $GITHUB_ENV
          echo "do_release=1" >> $GITHUB_ENV

      - name: Check for new major version
        if: contains(steps.check_pr_labels.outputs.labels, ' major ')
        run: |
          echo "RAMSTK_NEXT_VER=${{ steps.nexttag.outputs.major }}" >> $GITHUB_ENV"
          echo "do_bump=1" >> $GITHUB_ENV
          echo "do_release=1" >> $GITHUB_ENV

      - name: Draft release notes
        if: ${{ env.do_release == 1}}
        uses: release-drafter/release-drafter@master
        with:
          name: "v${{ env.RAMSTK_NEXT_VER }}"
          tag: "v${{ env.RAMSTK_NEXT_VER }}"
          version: "${{ env.RAMSTK_NEXT_VER }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Update CHANGELOG.md and cut release PR
        if: $${{ env.do_release == 1 }}
        uses: patrickjahns/chlgr@v1
        with:
          release-version: "v${{ env.RAMSTK_NEXT_VER }}"
          release-branch: "release/v${{ env.RAMSTK_NEXT_VER }}"
