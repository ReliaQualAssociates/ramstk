name: Draft Next Release

on:
  pull_request:
    branches:
      - master

jobs:
  draft_release:
    name: Draft Next Release
    if: startsWith(github.head_ref, 'bump_version_files') == false && github.event.pull_request.head.repo.full_name == github.repository
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
          ref: ${{ github.head_ref }}

      - name: Get PR labels
        id: check_pr_labels
        uses: joerick/pr-labels-action@v1.0.6

      - name: Get previous tag
        id: previoustag
        uses: weibullguy/github-action-get-previous-tag@v1
        with:
          skip-tags: 1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Get next semantic version
        id: nexttag
        uses: WyriHaximus/github-action-next-semvers@v1
        with:
          version: ${{ steps.previoustag.outputs.tag }}

      - name: Check for new patch version
        if: contains(steps.check_pr_labels.outputs.labels, ' patch ')
        run: |
          echo "RAMSTK_NEXT_VER=${{ steps.nexttag.outputs.patch }}" >> $GITHUB_ENV
          echo "do_bump=1" >> $GITHUB_ENV
          echo "do_release=0" >> $GITHUB_ENV

      - name: Check for new minor version
        if: contains(steps.check_pr_labels.outputs.labels, ' minor ')
        run: |
          echo "RAMSTK_NEXT_VER=${{ steps.nexttag.outputs.minor }}" >> $GITHUB_ENV
          echo "do_bump=1" >> $GITHUB_ENV
          echo "do_release=1" >> $GITHUB_ENV

      - name: Check for new major version
        if: contains(steps.check_pr_labels.outputs.labels, ' major ')
        run: |
          echo "RAMSTK_NEXT_VER=${{ steps.nexttag.outputs.major }}" >> $GITHUB_ENV
          echo "do_bump=1" >> $GITHUB_ENV
          echo "do_release=1" >> $GITHUB_ENV

      - name: Check if VERSION has already been updated
        run: |
          file_ver=$(cat VERSION)
          if [ $file_ver == ${{ env.RAMSTK_NEXT_VER }} ]; then echo "do_bump=0" >> $GITHUB_ENV; fi

      - name: Update VERSION and pyproject.toml file
        if: ${{ env.do_bump == 1 }}
        run: |
          echo "${{ env.RAMSTK_NEXT_VER }}" > VERSION
          sed -i 's/\(^version =.*$\)/version = "${{ env.RAMSTK_NEXT_VER }}"/' pyproject.toml
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -a -m "Update VERSION and pyproject.toml" && echo "do_push=1" >> $GITHUB_ENV

      - name: Update PR
        if: ${{ env.do_push == 1 }}
        uses: peter-evans/create-pull-request@v3
        with:
          commit-message: Bump version files
          title: "chore: bump version files"
          body: Bump VERSION and pyproject.toml to next version.
          branch: bump_version_files/${{ github.head_ref }}

      - name: Draft release notes
        if: ${{ env.do_release == 1}}
        uses: release-drafter/release-drafter@master
        with:
          name: "latest"
          tag: "latest"
          version: "${{ env.RAMSTK_NEXT_VER }}"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
