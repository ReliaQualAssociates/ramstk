[project]
name = "ramstk"
version = "0.14.1"
description = "A tool to manage RAMS data and analyses."
readme = "README.md"
requires-python = "^3.6"
license = "LICENSE"
authors = [
    "Doyle 'weibullguy' Rowland <info@reliaqual.com>"
]
maintainers = [
    "Doyle 'weibullguy' Rowland <info@reliaqual.com>"
]
keywords = [
    "reliability", "availability", "maintainability", "safety", "RAMS",
    "engineering", "quality"
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: X11 Applications :: GTK',
    'Intended Audience :: Other Audience',
	'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
	'Natural Language :: English',
	'Operating System :: POSIX',
    'Programming Language :: Python :: 3',
	'Programming Language :: Python :: 3.6',
	'Programming Language :: Python :: 3.7',
	'Programming Language :: Python :: 3.8',
    'Topic :: Scientific/Engineering',
]

[project.urls]
homepage = "https://github.com/ReliaQualAssociates/ramstk"
repository = "https://github.com/ReliaQualAssociates/ramstk"
documentation = "https://ramstk.readthedocs.io/en/latest/"

[build-system]
# These are the assumed default build requirements from pip:
# https://pip.pypa.io/en/stable/reference/pip/#pep-517-and-518-support
requires = ["setuptools>=40.8.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
known_first_party = 'ramstk'
known_third_party = ['dateutil','gi','lifelines','matplotlib','numpy','openpyxl','pandas','psycopg2','pubsub','pytest','scipy','setuptools','sortedcontainers','sql','sqlalchemy','sympy','toml','treelib','xlwt','ISOLATION_LEVEL_AUTOCOMMIT']
import_heading_firstparty = 'RAMSTK Package Imports'
import_heading_localfolder = 'RAMSTK Local Imports'
import_heading_stdlib = 'Standard Library Imports'
import_heading_thirdparty = 'Third Party Imports'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
	'*/.local/*',
	'*/.virtualenv/*',
	'*/tests/*',
	'*/views/*',
	'__init__.py',
	'conf.py',
	'setup.py'
]
relative_files = true

[tool.coverage.report]
omit = [
	'*/.local/*',
	'*/.virtualenvs/*',
	'*/tests/*',
	'*/views/*',
	'__init__.py',
	'conf.py',
	'setup.py'
]
exclude_lines = [
	'pragma: no cover',
	'import',
	'if __name__ == __main__:'
]
show_missing = true

[tool.coverage.html]
directory = '.reports/coverage/html'
title = "RAMSTK Test Coverage Report"

[tool.coverage.xml]
output = 'cobertura.xml'

[tool.pytest.ini_options]
minversion = "6.0"
addopts = '--ignore=build --ignore=data --ignore=dist --ignore=docs --ignore=locale --ignore=RAMSTK.egg-info --ignore=tests --ignore=setup.py --ignore=data.py --ignore=__init__.py --cov-config=pyproject.toml --cov=ramstk --cov-branch --cov-append --cov-report=html --cov-report=xml --cov-report=term'
norecursedirs = [
	'.git',
	'.pytest_cache',
	'.tox',
	'build',
	'data',
	'dist',
	'docs',
	'locale',
	'RAMSTK.egg-info',
	'tests'
]
testpaths = 'tests'
markers = [
	'unit: mark the test as a unit test.',
	'integration: mark the test as an integration test.',
	'calculation: mark the test as test of a calculation method/function.',
	'gui: mark the tests as test of a GUI component.'
]

[tool.pylint.master]
ignore = [
	'tests'
]
persistent = true
extension-pkg-whitelist = [
	'pango'
]

[tool.pylint.messages_control]
disable = [
	'invalid-name',
	'line-too-long',
	'too-many-instance-attributes',
	'too-few-public-methods',
	'relative-import',
	'fixme',
	'anomalous-unicode-escape-in-string',
	'import-error',
	'no-member'
]

[tool.pylint.reports]
reports = true

[tool.pylint.miscellaneous]
notes = [
	'FIXME',
	'ISSUE',
	'TODO'
]

[tool.pylint.similarities]
min-similarity-lines = 10
ignore-comments = true
ignore-docstrings = true
ignore-imports = true

[tool.pylint.format]
max-line-length = 80
indent-string = '    '
max-module-lines = 5000

[tool.pylint.basic]
good-names = [
	'_'
]
attr-rgx = '^_{0,1}[a-zA-Z]{2,10}_{0,1}[a-zA-Z]{0,10}_{0,1}[a-zA-Z]{0,10}$'

[tool.pylint.typecheck]
ignore-mixin-members = true
ignored-classes = [
	'SQLObject'
]

[tool.pylint.design]
max-args = 6
