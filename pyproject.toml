[tool.poetry]
name = "ramstk"
version = "0.15.22"
description = "A tool to manage RAMS data and analyses."
authors = ["Doyle 'weibullguy' Rowland <doyle.rowland@reliaqual.com>"]
maintainers = ["Doyle 'weibullguy' Rowland <doyle.rowland@reliaqual.com>"]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/ReliaQualAssociates/ramstk"
repository = "https://github.com/ReliaQualAssociates/ramstk"
documentation = "https://ramstk.readthedocs.io/en/latest/"
keywords = [
    "reliability", "availability", "maintainability", "safety", "RAMS",
    "engineering", "quality"
]
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: X11 Applications :: GTK',
    'Intended Audience :: Other Audience',
	'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
	'Natural Language :: English',
	'Operating System :: POSIX',
    'Programming Language :: Python :: 3',
	'Programming Language :: Python :: 3.6',
	'Programming Language :: Python :: 3.7',
	'Programming Language :: Python :: 3.8',
    'Topic :: Scientific/Engineering',
]
packages = [{include = "ramstk", from = "src"}]
include = [
	"LICENSE",
]

[tool.poetry.dependencies]
python = "^3.6.2,<4.0"
lifelines = "^0.26.3"
matplotlib = "^3.3.4"
numpy = [
	{ version = "^1.19", python = "^3.6,<3.7" },
	{ version  = "^1.21", python = "^3.7" }]
openpyxl = "^3.0.6"
pandas = "1.1.5"
psycopg2 = "^2.8.6"
pycairo = "^1.20.0"
pygobject = "^3.38"
pypubsub = "^4.0.3"
scipy = [
	{ version = "^1.5", python = "^3.6,<3.7" },
	{ version = "^1.6.0", python = "^3.7" }
]
sortedcontainers = "^2.3.0"
sqlalchemy-utils = "^0.38.0"
sqlalchemy = "^1.3.0"
statsmodels = "^0.12.2"
sympy = "^1.8.0"
toml = "^0.10.2"
treelib = "^1.5.3"
xlrd = "^2.0.1"
XlsxWriter = "^3.0.1"
xlwt = "^1.3.0"

[tool.poetry.dev-dependencies]
Babel = "^2.9.0"
bandit = "^1.7.0"
black = "^22.0.0"
coveralls = "^3.0.0"
coverage = {extras = ["toml"], version = "^6.2"}
docformatter = "^1.4"
isort = "^5.7.0"
mccabe = "^0.6.1"
mock = "^4.0.3"
mypy = "^0.931"
pep8 = "^1.7.1"
pre-commit = "^2.10.1"
pre-commit-hooks = "^4.0.1"
pycodestyle = "^2.7.0"
pydocstyle = "^6.1.1"
pylint = "^2.6.0"
pyroma = "^3.2"
pytest = "<7.0.0"
pytest-cov = "^3.0.0"
pytest-icdiff = "^0.5"
pytest-sugar = "^0.9.4"
radon = "^5.1.0"
recommonmark = "^0.7.1"
seed-isort-config = "^2.2.0"
Sphinx = "^4.4.0"
sphinx_py3doc_enhanced_theme = "^2.4.0"
sphinxcontrib-issuetracker = "^0.11"
sphinxcontrib-spelling = "^7.1.0"
twine = "^3.3.0"
pillow = [
	{ version = "8.4.0", python = "<3.7" },
	{ version = "^9.0.0" , python = "^3.7" }
]

[tool.poetry.scripts]
ramstk = "ramstk.__main__:the_one_ring"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py36', 'py37', 'py38']
include = '\.pyi?$'
exclude = '''
/(
    \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

[tool.isort]
known_first_party = 'ramstk'
known_third_party = ['dateutil','gi','lifelines','matplotlib','numpy','openpyxl','pandas','psycopg2','pubsub','pytest','scipy','setuptools','sortedcontainers','sql','sqlalchemy','sympy','toml','treelib','xlwt','ISOLATION_LEVEL_AUTOCOMMIT']
import_heading_firstparty = 'RAMSTK Package Imports'
import_heading_localfolder = 'RAMSTK Local Imports'
import_heading_stdlib = 'Standard Library Imports'
import_heading_thirdparty = 'Third Party Imports'
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.coverage.run]
branch = true
cover_pylib = false
omit = [
	'*/.local/*',
	'*/.virtualenv/*',
	'*/tests/*',
	'*/views/*',
	'__init__.py',
	'conf.py',
	'setup.py'
]
relative_files = true

[tool.coverage.report]
omit = [
	'*/.local/*',
	'*/.virtualenvs/*',
	'*/tests/*',
	'*/views/*',
	'__init__.py',
	'conf.py',
	'setup.py'
]
exclude_lines = [
	'pragma: no cover',
	'import',
	'if __name__ == __main__:'
]
show_missing = true

[tool.coverage.html]
directory = '.reports/coverage/html'
title = "RAMSTK Test Coverage Report"

[tool.coverage.xml]
output = 'cobertura.xml'

[tool.pytest.ini_options]
minversion = "6.0"
addopts = '--ignore=build --ignore=data --ignore=dist --ignore=docs --ignore=locale --ignore=RAMSTK.egg-info --ignore=tests --ignore=setup.py --ignore=data.py --ignore=__init__.py'
norecursedirs = [
	'.git',
	'.pytest_cache',
	'.tox',
	'build',
	'data',
	'dist',
	'docs',
	'locale',
	'RAMSTK.egg-info',
	'tests'
]
testpaths = 'tests'
markers = [
	'unit: mark the test as a unit test.',
	'integration: mark the test as an integration test.',
	'calculation: mark the test as test of a calculation method/function.',
	'gui: mark the as a GUI test.',
]

[tool.pylint.master]
ignore-paths = [
	'tests*'
]
persistent = true
extension-pkg-whitelist = [
	'pango'
]
disable = ['duplicate-code']

[tool.pylint.messages_control]
disable = [
	'invalid-name',
	'line-too-long',
	'too-many-instance-attributes',
	'too-few-public-methods',
	'relative-import',
	'fixme',
	'anomalous-unicode-escape-in-string',
	'import-error',
	'no-member',
	'no-else-return'
]

[tool.pylint.reports]
reports = true

[tool.pylint.miscellaneous]
notes = [
	'FIXME',
	'ISSUE',
	'TODO'
]

[tool.pylint.similarities]
min-similarity-lines = 100
ignore-comments = true
ignore-docstrings = true
ignore-imports = true

[tool.pylint.format]
max-line-length = 88
indent-string = '    '
max-module-lines = 5000

[tool.pylint.basic]
good-names = [
	'_'
]
attr-rgx = '^_{0,1}[a-zA-Z]{2,10}_{0,1}[a-zA-Z]{0,10}_{0,1}[a-zA-Z]{0,10}$'

[tool.pylint.typecheck]
ignore-mixin-members = true
ignored-classes = [
	'SQLObject'
]

[tool.pylint.design]
max-args = 6

[tool.docformatter]
wrap-summaries = 87
wrap-descriptions = 81

[tool.mypy]
allow_subclassing_any = true
follow_imports = "skip"
implicit_reexport = true
ignore_missing_imports = true

[[tool.mypy.overrides]]
module = "tests.*"
ignore_errors = true

[tool.rstcheck]
report = "warning"
ignore_directives = [
	"automodule",
	"tabularcolumns",
]
ignore_roles = [
	"numref",
]

[tool.pydocstyle]
ignore = [
	'D203',
	'D204',
	'D213',
]
match = 'src/ramstk/*.py'
